{"version":3,"sources":["components/TodoForm.jsx","components/Todo.jsx","components/TodoList.jsx","App.js","index.js"],"names":["TodoForm","props","useState","edit","value","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","e","target","handleSubmit","preventDefault","onSubmit","id","Math","floor","random","text","className","placeholder","onChange","name","ref","onClick","Todo","todos","completeTodo","updateTodo","removeTodo","setEdit","map","todo","index","isComplete","TodoList","setTodos","todoId","newVal","test","prev","item","newTodos","removeArr","filter","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAEe,SAASA,EAASC,GAAO,MAEVC,mBAASD,EAAME,KAAOF,EAAME,KAAKC,MAAQ,IAF/B,mBAE7BC,EAF6B,KAEtBC,EAFsB,KAI9BC,EAAWC,iBAAO,MAExBC,qBAAU,WACNF,EAASG,QAAQC,WAGrB,IAAMC,EAAe,SAAAC,GACjBP,EAASO,EAAEC,OAAOV,QAGhBW,EAAe,SAAAF,GACjBA,EAAEG,iBAEFf,EAAMgB,SAAU,CACZC,GAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBC,KAAMjB,IAEVC,EAAS,KAGb,OACI,sBAAMiB,UAAU,YAAhB,SACKtB,EAAME,KACH,gCACI,uBACAqB,YAAY,SACZpB,MAAOC,EACPoB,SAAUb,EACVc,KAAK,OACLC,IAAKpB,EACLgB,UAAU,oBAGV,wBAAQK,QAASb,EAAcQ,UAAU,mBAAzC,uBAKJ,gCACI,uBACAC,YAAY,WACZpB,MAAOC,EACPoB,SAAUb,EACVc,KAAK,OACLC,IAAKpB,EACLgB,UAAU,eAEV,wBAAQK,QAASb,EAAcQ,UAAU,cAAzC,2BClDpB,IAoCeM,EApCF,SAAC,GAAoD,IAAnDC,EAAkD,EAAlDA,MAAOC,EAA2C,EAA3CA,aAA0BC,GAAiB,EAA7BC,WAA6B,EAAjBD,YAAiB,EACrC9B,mBAAU,CAC9BgB,GAAI,KACJd,MAAO,KAHkD,mBACtDD,EADsD,KAChD+B,EADgD,KAe7D,OAAI/B,EAAKe,GACE,cAAClB,EAAD,CAAUG,KAAMA,EAAMc,SAVf,SAAAb,GACd4B,EAAW7B,EAAKe,GAAId,GAEpB8B,EAAQ,CACJhB,GAAI,KACJd,MAAO,QAQR0B,EAAMK,KAAI,SAACC,EAAMC,GAAP,OACb,sBACId,UAAWa,EAAKE,WAAa,oBAAsB,WADvD,UAIA,qBAAiBV,QAAS,kBAAMG,EAAaK,EAAKlB,KAAlD,SACKkB,EAAKd,MADAe,GAIV,qBAAKd,UAAU,YANNc,OCrBF,SAASE,IAAY,IAAD,EACLrC,mBAAS,IADJ,mBACxB4B,EADwB,KACjBU,EADiB,KAazBR,EAAa,SAACS,EAAQC,GACnBA,EAAOpB,OAAQ,QAAQqB,KAAKD,EAAOpB,OAIxCkB,GAAS,SAAAI,GAAI,OAAIA,EAAKT,KAAI,SAAAU,GAAI,OAAKA,EAAK3B,KAAOuB,EAASC,EAASG,SAmBrE,OACI,sBAAKtB,UAAU,YAAf,UACI,4DACA,cAACvB,EAAD,CAAUiB,SArCF,SAAAmB,GACZ,GAAKA,EAAKd,OAAQ,QAAQqB,KAAKP,EAAKd,MAApC,CAIA,IAAMwB,EAAQ,CAAIV,GAAJ,mBAAaN,IAE3BU,EAASM,OA+BL,cAAC,EAAD,CACAhB,MAAOA,EACPC,aAhBa,SAAAb,GACJY,EAAMK,KAAI,SAAAC,GAInB,OAHIA,EAAKlB,KAAOA,IACZkB,EAAKE,YAAcF,EAAKE,YAErBF,KAEXI,EAASR,IAULC,WAvBW,SAAAf,GACf,IAAM6B,EAAY,YAAIjB,GAAOkB,QAAO,SAAAZ,GAAI,OAAIA,EAAKlB,KAAOA,KAExDsB,EAASO,IAqBLf,WAAYA,OCtCTiB,MARf,WACE,OACE,qBAAK1B,UAAU,WAAf,SACE,cAACgB,EAAD,OCDNW,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.91c4204d.chunk.js","sourcesContent":["import React, {useState, useEffect, useRef} from 'react'\r\n\r\nexport default function TodoForm(props) {\r\n    //Hook\r\n    const [input, setInput] = useState(props.edit ? props.edit.value : '');\r\n\r\n    const inputRef = useRef(null)\r\n\r\n    useEffect(() => {\r\n        inputRef.current.focus()\r\n    })\r\n\r\n    const handleChange = e => {\r\n        setInput(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        props.onSubmit( {\r\n            id: Math.floor(Math.random() * 100000),\r\n            text: input\r\n        })\r\n        setInput('')\r\n    }\r\n\r\n    return (\r\n        <form className='todo-form'>\r\n            {props.edit ? (\r\n                <div>\r\n                    <input \r\n                    placeholder='Update'\r\n                    value={input}\r\n                    onChange={handleChange}\r\n                    name='text'\r\n                    ref={inputRef}\r\n                    className='todo-input edit'\r\n                    />\r\n\r\n                    <button onClick={handleSubmit} className='todo-button edit'>\r\n                        update\r\n                    </button>\r\n                </div>\r\n            ) : (\r\n                <div>\r\n                    <input\r\n                    placeholder='Add Task'\r\n                    value={input}\r\n                    onChange={handleChange}\r\n                    name='text'\r\n                    ref={inputRef}\r\n                    className='todo-input'\r\n                    />\r\n                    <button onClick={handleSubmit} className='todo-button'>\r\n                        Add todo\r\n                    </button>\r\n                </div>\r\n            )}\r\n        </form>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport TodoForm from './TodoForm'\r\n\r\nconst Todo = ({todos, completeTodo, removeTodo, updateTodo }) => {\r\n    const [edit, setEdit] = useState ({\r\n        id: null,\r\n        value: ''\r\n    })\r\n\r\n    const subUpdate = value => {\r\n        updateTodo(edit.id, value)\r\n\r\n        setEdit({\r\n            id: null,\r\n            value: ''\r\n        })\r\n    }\r\n    \r\n    if (edit.id) {\r\n        return <TodoForm edit={edit} onSubmit={subUpdate} />\r\n    }\r\n\r\n    return todos.map((todo, index) => (\r\n        <div\r\n            className={todo.isComplete ? 'todo.row complete' : 'todo-row'}\r\n            key={index} \r\n        >\r\n        <div key={index} onClick={() => completeTodo(todo.id)}>\r\n            {todo.text}\r\n        </div>\r\n\r\n        <div className='icons'>\r\n\r\n        </div>\r\n\r\n        </div>\r\n    ))\r\n}\r\n\r\nexport default Todo\r\n\r\n","import React, {useState} from 'react'\r\nimport TodoForm from './TodoForm'\r\nimport Todo from './Todo'\r\n\r\nexport default function TodoList() {\r\n    const [todos, setTodos] = useState([])\r\n\r\n    const addTodo = todo => {\r\n        if (!todo.text || /^\\s*$/.test(todo.text)) {\r\n            return\r\n        }\r\n\r\n        const newTodos = [todo, ...todos]\r\n\r\n        setTodos(newTodos)\r\n    }\r\n\r\n    const updateTodo = (todoId, newVal) => {\r\n        if (!newVal.text || /^\\s*$/.test(newVal.text)) {\r\n            return\r\n        }\r\n\r\n        setTodos(prev => prev.map(item => (item.id === todoId ? newVal : item)))\r\n    }\r\n\r\n    const removeTodo = id => {\r\n        const removeArr = [...todos].filter(todo => todo.id !== id)\r\n\r\n        setTodos(removeArr)\r\n    }\r\n\r\n    const completeTodo = id => {\r\n        let update = todos.map(todo => {\r\n            if (todo.id === id) {\r\n                todo.isComplete = !todo.isComplete\r\n            }\r\n            return todo\r\n        })\r\n        setTodos(updateTodo)\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <h1>What is your way to GLORY?</h1>\r\n            <TodoForm onSubmit={addTodo}/>\r\n            <Todo\r\n            todos={todos}\r\n            completeTodo={completeTodo}\r\n            removeTodo={removeTodo}\r\n            updateTodo={updateTodo}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport TodoList from './components/TodoList.jsx'\n\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}